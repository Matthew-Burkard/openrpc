image: "python:3.9.17"

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml

variables:
  # Change pip's cache directory to be inside the project directory
  # since we can only cache local items.
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PROJECT_SRC_DIR: "$CI_PROJECT_DIR/openrpc/"

.setup_environment: &setup_env
  before_script:
    - python --version
    - pip install poetry
    - poetry --version
    - poetry config virtualenvs.in-project true
    - poetry install -vv
    - source ./.venv/bin/activate

cache:
  paths:
    - .cache/pip
    - .venv/

stages:
  - analysis
  - test
  - deploy

black:
  stage: analysis
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  <<: *setup_env
  script:
    - black --check $PROJECT_SRC_DIR

ruff:
  stage: analysis
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  <<: *setup_env
  script:
    - ruff check $PROJECT_SRC_DIR

mypy:
  stage: analysis
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  <<: *setup_env
  script:
    - mypy $PROJECT_SRC_DIR

pytest:
  stage: test
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  <<: *setup_env
  script:
    - poetry run pytest tests/

deploy:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  <<: *setup_env
  script:
    - poetry build
    - poetry publish -u "$PYPI_USERNAME" -p "$PYPI_TOKEN"
